[
    {
        "id": "13df9ad25c9618e4",
        "type": "tab",
        "label": "Tarea ESP826",
        "disabled": false,
        "info": "# Tarea de grupo ESP826\n\n## Grupo 3\n- Izan Amador Bustos\n- Irene Guijarro Molina\n- Jorge Luis Benavides Macías\n- Ricardo Panero Lamothe\n\n## Descripción de la práctica\n\nHay que programar usando el IDE Arduino la placa de desarrollo ESP8266 NodeMCU Dev Kit para que realice las siguientes funciones.\n\n1. Conexión \n2. Envío periódico de datos\n3. Escritura en LED\n4. Lectura del LED\n\nHay dos opciones para usar como servidor MQTT, el de vuestra máquina virtual. Hay que usar como IP del servidor la del PC que estáis usando. También podéis usar el servidor iot.ac.uma.es usando como usuario y clave: infind / zancudo . Siempre que se use este servidor los topics tienen que empezar obligatoriamente por infind/\n\nEn los topics hay que usar el nombre del grupo, por ejemplo GRUPO5 si se trata del prototipo del grupo 5. Si dentro del mismo grupo hay varios prototipos en marcha añadir otro nivel intermedio al topic con el nombre propio del programador si se quiere evitar interferencias.\n\nImplementar flujos Node-RED para que sean funcionales con este nuevo prototipo. Se deben recibir los datos de sensores y estado para visualizarlos en el Dashboard y permitir configurar el nivel de brillo del LED.\n\nEntregar en grupo el programa Arduino y flujo NodeRED desarrollados.\nLibrerías de interés\n\nPara configurar la conexión MQTT, LWT, publicar y suscribirse a topics, ... usamos la librería PubSubClient. Consultar referencia en: https://pubsubclient.knolleary.net/ \n\nPara manejar las cadenas formateadas con JSON se recomienda utilizar la librería ArduinoJson (https://arduinojson.org/) instalable desde el gestor de librerías de la herramienta. O imprimir las cadenas con el formato adecuado usando funciones de C como sprintf().\n\n\n## 1. Conexión \n\nConectar usando el punto de acceso WiFi con SSID: infind  y password: 1518wifi si estamos en el laboratorio y vuestra WiFi si estáis en casa.\n\n\n\n## 2. Envío periódico de datos\n\nEl dispositivo debe leer un sensor de humedad y tempertaura DHT11, también la entrada analógica para controlar el nivel de la batería/alimentación (ver https://arduino-esp8266.readthedocs.io/en/latest/reference.html#analog-input) y enviar periodicamente (cada 30 segundos) los valores mediante MQTT.  \n\nEn este envío periódico se incluirá también información de la conexión WiFi (SSid), IP asignada y potencia de señal (RSSI). \n\nHabrá que realizar el conexionado del sensor DHT11 como vimos en tareas anteriores. Para la lectura del nivel de voltaje (Vcc) hay que usar las indicaciones del enlace en el párrafo anterior, la función para leer ESP.getVcc() devolverá los milivoltios observados en la entrada de alimentación (https://arduino-esp8266.readthedocs.io/en/latest/libraries.html#esp-specific-apis).\n\nPara el campo \"Uptime\", enviaremos el número de milisegundos desde que inició la placa.\n\nLa información sobre la conexión WiFi del dispositivo se podrá consultar mediante la clases disponibles en la librería WiFi (https://www.arduino.cc/en/Reference/WiFi). Algunas particularidades para ESP8266 estarán mejor descritas en la librería ESP8266WiFi (https://arduino-esp8266.readthedocs.io/en/latest/esp8266wifi/station-class.html)  y en el API de la librería  ( https://links2004.github.io/Arduino/df/d1c/class_e_s_p8266_wi_fi_scan_class.html).\n\n\n\n\n## 3. Escritura en LED\n\nTambién mediante el mismo protocolo debe recibir ordenes para actuar sobre la salida GPIO2 (conectada a un LED azul sobre la placa), informando de los cambios realizados.\n\nEl control del LED (GPIO2) esta vez lo haremos usando PWM (https://arduino-esp8266.readthedocs.io/en/latest/reference.html#analog-output) de forma que se configurará su funcionamiento con un número entero entre 0 y 100, que representará el nivel de brillo del LED en tanto por ciento. \n\nLos valores 0 y 100 deben funcionar como hasta ahora apagando y encendiendo totalmente el LED y los valores intermedios deben encenderlo con la atenuación indicada usando PWM.\n\nPosiblemente el rango de actuación de analogWrite() sea de [0-1023] o [0-255], dependerá de la versión que estemos usando del soporte para ESP8266 en Arduino.\n\n## 4. Lectura del LED\n\n\n\n## 1 Envío periódico de datos\n\nEl dispositivo debe leer un sensor de humedad y tempertaura DHT11, también la entrada analógica para controlar el nivel de la batería/alimentación ( ver https://arduino-esp8266.readthedocs.io/en/latest/reference.html#analog-input) y enviar periodicamente (cada 30 segundos) los valores mediante MQTT.  \n\nEn este envío periódico se incluirá también información de la conexión WiFi (SSid), IP asignada y potencia de señal (RSSI). También mediante el mismo protocolo debe recibir ordenes para actuar sobre la salida GPIO2 (conectada a un LED azul sobre la placa), informando de los cambios realizados."
    },
    {
        "id": "2f2d6fcd70cbfe4a",
        "type": "group",
        "z": "13df9ad25c9618e4",
        "name": "Estado y LWT",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "dfaadf3ab199e00c",
            "1eaec8b318944fc3",
            "56640648f318fb19",
            "631359044b52c8b1",
            "b5d1dddf4e575f4e",
            "d5b5d13671439e9a",
            "06e1a8509d49c5a1",
            "89c9e5866eeb4402",
            "02738aad3e6d70d4"
        ],
        "x": 14,
        "y": 19,
        "w": 692,
        "h": 202,
        "info": "# Estado y LWT\n\n- Topic: infind/GRUPOX/conexion\n- Acción: Publicar\n- Descripción: Estado de conexión del dispositivo (mensaje retenido). Usar últimas voluntades (LWT) para enviar la notificación desconexión\n- Ejemplos: {\"online\":true}  {\"online\":false}"
    },
    {
        "id": "31d7abf2d95de80e",
        "type": "group",
        "z": "13df9ad25c9618e4",
        "name": "Sensores",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "a30adc92797161ad",
            "e4e313be7cf72272",
            "204e8951dbb09c53",
            "fd4c253fa4036aa9",
            "7873a2401884d320",
            "ecccce0a5594afdb",
            "39d6fac3b45b36ea",
            "2a35eff3801fbdb8",
            "cdeea9f974f54573",
            "495dd803d5128cd4",
            "bee0e551b2c2a3bf",
            "30fc991dc7523ddb",
            "34d884309e9afa81"
        ],
        "x": 14,
        "y": 239,
        "w": 692,
        "h": 362,
        "info": "# Sensores\n\n- Topic: infind/GRUPOX/datos\n- Acción: Publicar\n- Descripción: Actualización periódica (30s) de información de sensores y más\n- Ejemplo:\n\n\n{\n\n\"Uptime\":12300,\n\n\"Vcc\":2.97,\n\n\"DHT11\":{\"temp\":26.0,\"hum\":37.0},\n\n\"LED\":100,\n\n\"Wifi\":{\"SSId\":\"infind\",\"IP\":\"192.168.0.100\",\"RSSI\":56}\n\n}\n"
    },
    {
        "id": "5cba6c5db0d46559",
        "type": "group",
        "z": "13df9ad25c9618e4",
        "name": "Estado Led",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "9beb600c63b60280",
            "93107118806b4b86",
            "29d5550a23b4d981",
            "5ae2c99e08b2c418"
        ],
        "x": 14,
        "y": 859,
        "w": 532,
        "h": 202,
        "info": "# Sensores\n\n- Topic: infind/GRUPOX/datos\n- Acción: Publicar\n- Descripción: Actualización periódica (30s) de información de sensores y más\n- Ejemplo:\n\n\n{\n\n\"Uptime\":12300,\n\n\"Vcc\":2.97,\n\n\"DHT11\":{\"temp\":26.0,\"hum\":37.0},\n\n\"LED\":100,\n\n\"Wifi\":{\"SSId\":\"infind\",\"IP\":\"192.168.0.100\",\"RSSI\":56}\n\n}\n"
    },
    {
        "id": "c59e69ccdd22540f",
        "type": "group",
        "z": "13df9ad25c9618e4",
        "name": "Cambio LED",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "0fc0b1c73d0162a9",
            "02e9f915f64990b0",
            "e741bb926c073ddc",
            "1031733d058764be",
            "612853001cbb9f90"
        ],
        "x": 14,
        "y": 619,
        "w": 612,
        "h": 222,
        "info": "# Intensidad\n\n- Topic: infind/GRUPOX/led/cmd\n- Acción: Suscribir\n- Descripción: El dispositivo recibe la configuración de intensidad del LED [0-100]\n- Ejemplo: { \"level\":75 }"
    },
    {
        "id": "dfaadf3ab199e00c",
        "type": "mqtt in",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "Estado y LWT",
        "topic": "infind/GRUPO3/conexion",
        "qos": "2",
        "datatype": "auto",
        "broker": "8b67b1bd51c43347",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 180,
        "wires": [
            [
                "d5b5d13671439e9a"
            ]
        ]
    },
    {
        "id": "1eaec8b318944fc3",
        "type": "debug",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 60,
        "wires": []
    },
    {
        "id": "56640648f318fb19",
        "type": "inject",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "Online",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"online\":true}",
        "payloadType": "str",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "d5b5d13671439e9a"
            ]
        ]
    },
    {
        "id": "631359044b52c8b1",
        "type": "inject",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "Offline",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"online\":false}",
        "payloadType": "str",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "d5b5d13671439e9a"
            ]
        ]
    },
    {
        "id": "a30adc92797161ad",
        "type": "mqtt in",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "Sensores",
        "topic": "infind/GRUPO3/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "8b67b1bd51c43347",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 100,
        "y": 400,
        "wires": [
            [
                "fd4c253fa4036aa9",
                "495dd803d5128cd4"
            ]
        ]
    },
    {
        "id": "e4e313be7cf72272",
        "type": "debug",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "204e8951dbb09c53",
        "type": "inject",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "Datos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{  \"Uptime\":12300,  \"Vcc\":4.97,  \"DHT11\":{\"temp\":-2.0,\"hum\":37.0},  \"LED\":100,  \"Wifi\":{\"SSId\":\"infind\",\"IP\":\"192.168.0.100\",\"RSSI\":56}  }",
        "payloadType": "str",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "fd4c253fa4036aa9"
            ]
        ]
    },
    {
        "id": "9beb600c63b60280",
        "type": "mqtt in",
        "z": "13df9ad25c9618e4",
        "g": "5cba6c5db0d46559",
        "name": "Sensores",
        "topic": "infind/GRUPO3/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "8b67b1bd51c43347",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 100,
        "y": 1020,
        "wires": [
            [
                "5ae2c99e08b2c418"
            ]
        ]
    },
    {
        "id": "93107118806b4b86",
        "type": "inject",
        "z": "13df9ad25c9618e4",
        "g": "5cba6c5db0d46559",
        "name": "Status",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"led\":75 }",
        "payloadType": "str",
        "x": 110,
        "y": 900,
        "wires": [
            [
                "5ae2c99e08b2c418"
            ]
        ],
        "info": "# Status\n\n- Topic: infind/GRUPOX/led/status\n- Acción: Publicar\n- Descripción: El dispositivo confirma la configuración de intensidad del LED [0-100] después de aplicarla\n- Ejemplo: { \"led\":75 } "
    },
    {
        "id": "b5d1dddf4e575f4e",
        "type": "link in",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "",
        "links": [
            "d5b5d13671439e9a"
        ],
        "x": 355,
        "y": 60,
        "wires": [
            [
                "1eaec8b318944fc3",
                "06e1a8509d49c5a1"
            ]
        ]
    },
    {
        "id": "d5b5d13671439e9a",
        "type": "link out",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "",
        "links": [
            "b5d1dddf4e575f4e"
        ],
        "x": 295,
        "y": 60,
        "wires": []
    },
    {
        "id": "fd4c253fa4036aa9",
        "type": "json",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "e4e313be7cf72272",
                "ecccce0a5594afdb",
                "39d6fac3b45b36ea",
                "2a35eff3801fbdb8",
                "cdeea9f974f54573",
                "bee0e551b2c2a3bf",
                "30fc991dc7523ddb",
                "34d884309e9afa81"
            ]
        ]
    },
    {
        "id": "06e1a8509d49c5a1",
        "type": "json",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 120,
        "wires": [
            [
                "02738aad3e6d70d4"
            ]
        ]
    },
    {
        "id": "89c9e5866eeb4402",
        "type": "ui_led",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "order": 1,
        "group": "b8b5fb6b4bfeb434",
        "width": "2",
        "height": "2",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "02738aad3e6d70d4",
        "type": "change",
        "z": "13df9ad25c9618e4",
        "g": "2f2d6fcd70cbfe4a",
        "name": "Online",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.online",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "89c9e5866eeb4402"
            ]
        ]
    },
    {
        "id": "7873a2401884d320",
        "type": "ui_text",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "group": "27e360b8dee7f0ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime (s): ",
        "format": "{{msg.payload.Uptime}}",
        "layout": "row-left",
        "className": "",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "ecccce0a5594afdb",
        "type": "function",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "ms",
        "func": "msg.payload.Uptime = msg.payload.Uptime/1000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            [
                "7873a2401884d320"
            ]
        ]
    },
    {
        "id": "39d6fac3b45b36ea",
        "type": "ui_gauge",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "",
        "group": "27e360b8dee7f0ae",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Voltios Vcc",
        "label": "V",
        "format": "{{msg.payload.Vcc}}",
        "min": 0,
        "max": "5",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#008080"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "2a35eff3801fbdb8",
        "type": "ui_gauge",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "",
        "group": "27e360b8dee7f0ae",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "ºC",
        "format": "{{msg.payload.DHT11.temp}}",
        "min": "-5",
        "max": "50",
        "colors": [
            "#0080ff",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 610,
        "y": 400,
        "wires": []
    },
    {
        "id": "0fc0b1c73d0162a9",
        "type": "inject",
        "z": "13df9ad25c9618e4",
        "g": "c59e69ccdd22540f",
        "name": "Nivel: 75",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "{ \"level\":75 }",
        "payloadType": "str",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "02e9f915f64990b0"
            ]
        ]
    },
    {
        "id": "02e9f915f64990b0",
        "type": "mqtt out",
        "z": "13df9ad25c9618e4",
        "g": "c59e69ccdd22540f",
        "name": "Set Level",
        "topic": "infind/GRUPO3/led/cmd",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8b67b1bd51c43347",
        "x": 540,
        "y": 720,
        "wires": []
    },
    {
        "id": "e741bb926c073ddc",
        "type": "inject",
        "z": "13df9ad25c9618e4",
        "g": "c59e69ccdd22540f",
        "name": "Nivel:25",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "7.5",
        "topic": "",
        "payload": "{ \"level\":25 }",
        "payloadType": "str",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "02e9f915f64990b0"
            ]
        ]
    },
    {
        "id": "cdeea9f974f54573",
        "type": "ui_gauge",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "",
        "group": "27e360b8dee7f0ae",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{msg.payload.DHT11.hum}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#0080ff",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 600,
        "y": 440,
        "wires": []
    },
    {
        "id": "495dd803d5128cd4",
        "type": "debug",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 440,
        "wires": []
    },
    {
        "id": "1031733d058764be",
        "type": "ui_slider",
        "z": "13df9ad25c9618e4",
        "g": "c59e69ccdd22540f",
        "name": "",
        "label": "Nivel LED",
        "tooltip": "",
        "group": "27e360b8dee7f0ae",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 100,
        "y": 800,
        "wires": [
            [
                "612853001cbb9f90"
            ]
        ]
    },
    {
        "id": "612853001cbb9f90",
        "type": "function",
        "z": "13df9ad25c9618e4",
        "g": "c59e69ccdd22540f",
        "name": "",
        "func": "msg.payload= \"{ \\\"level\\\":\"+msg.payload+\" }\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 800,
        "wires": [
            [
                "02e9f915f64990b0"
            ]
        ]
    },
    {
        "id": "bee0e551b2c2a3bf",
        "type": "ui_text",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "group": "27e360b8dee7f0ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SSId: ",
        "format": "{{msg.payload.Wifi.SSId}}",
        "layout": "row-left",
        "className": "",
        "x": 590,
        "y": 480,
        "wires": []
    },
    {
        "id": "30fc991dc7523ddb",
        "type": "ui_text",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "group": "27e360b8dee7f0ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "IP: ",
        "format": "{{msg.payload.Wifi.IP}}",
        "layout": "row-left",
        "className": "",
        "x": 590,
        "y": 520,
        "wires": []
    },
    {
        "id": "34d884309e9afa81",
        "type": "ui_text",
        "z": "13df9ad25c9618e4",
        "g": "31d7abf2d95de80e",
        "group": "27e360b8dee7f0ae",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "RSSI: ",
        "format": "{{msg.payload.Wifi.RSSI}}",
        "layout": "row-left",
        "className": "",
        "x": 590,
        "y": 560,
        "wires": []
    },
    {
        "id": "29d5550a23b4d981",
        "type": "ui_gauge",
        "z": "13df9ad25c9618e4",
        "g": "5cba6c5db0d46559",
        "name": "",
        "group": "27e360b8dee7f0ae",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{msg.payload.led}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#005680",
            "#c0c0c0",
            "#80ffff"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 470,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5ae2c99e08b2c418",
        "type": "json",
        "z": "13df9ad25c9618e4",
        "g": "5cba6c5db0d46559",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 1000,
        "wires": [
            [
                "29d5550a23b4d981"
            ]
        ]
    },
    {
        "id": "8b67b1bd51c43347",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b8b5fb6b4bfeb434",
        "type": "ui_group",
        "name": "Estado y LWT",
        "tab": "4a06ba0a96f6d1fb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "27e360b8dee7f0ae",
        "type": "ui_group",
        "name": "G3 Datos",
        "tab": "4a06ba0a96f6d1fb",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a06ba0a96f6d1fb",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]